services:
  postgres:
    image: "postgres:17.6-bookworm"
    container_name: feedback-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-feedback}
      LC_LANG: ru_RU.UTF-8
    ports:
      - "${POSTGRES_PORT:-6543}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-feedback}"]
      interval: 30s
      timeout: 10s
      retries: 5
    labels:
      - traefik.enable=false


  redis:
    image: redis:8.2-alpine
    container_name: feedback-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  bullboard:
    container_name: feedback-bullboard
    image: venatum/bull-board
    restart: unless-stopped
    ports:
      - "7990:3000"
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_USE_TLS: 'false'
      BULL_PREFIX: bull
    depends_on:
      - redis
    labels:
      - traefik.enable=true
      - traefik.http.routers.bullboard.rule=Host(`bullboard.xn--47-dlckcacbiv4afwllqms4x.xn--p1ai`)
      - traefik.http.routers.bullboard.tls=true
      - traefik.http.routers.bullboard.tls.certresolver=sample


  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: feedback-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    labels:
      - traefik.enable=true
      - traefik.http.routers.pgadmin.entrypoints=web-secure
      - traefik.http.routers.pgadmin.rule=Host(`pgadmin.xn--47-dlckcacbiv4afwllqms4x.xn--p1ai`)
      - traefik.http.routers.pgadmin.tls=true
      - traefik.http.routers.pgadmin.tls.certresolver=sample


  minio:
    image: minio/minio:latest
    container_name: feedback-minio
    restart: always
    command: server --console-address ":9001" /data
    environment:
      MINIO_ROOT_USER: securedaccesskey:asddasd
      MINIO_ROOT_PASSWORD: mostsecretkey:changemechangeme
    ports:
      - 9000:9000 # API
      - 9001:9001 # Web console
    volumes:
      - minio-data:/data
    labels:
      - traefik.enable=true
      - traefik.http.routers.minio.entrypoints=web-secure
      - traefik.http.routers.minio.rule=Host(`minio.xn--47-dlckcacbiv4afwllqms4x.xn--p1ai`)
      - traefik.http.routers.minio.tls=true
      - traefik.http.routers.minio.tls.certresolver=sample
      - traefik.http.routers.minio.service=minio
      - traefik.http.services.minio.loadbalancer.server.port=9000

      - traefik.http.routers.minioweb.entrypoints=web-secure
      - traefik.http.routers.minioweb.rule=Host(`minioweb.xn--47-dlckcacbiv4afwllqms4x.xn--p1ai`)
      - traefik.http.routers.minioweb.tls=true
      - traefik.http.routers.minioweb.tls.certresolver=sample
      - traefik.http.routers.minioweb.service=minioweb
      - traefik.http.services.minioweb.loadbalancer.server.port=9001

volumes:
  minio-data:
  postgres_data:
  redis_data:
    external: false
